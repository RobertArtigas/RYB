#!-----------------------------------------------------------------------------------------------------
#!-----------------------------------------------------------------------------------------------------
#!-----------------------------------------------------------------------------------------------------
#EXTENSION (RYB_SQLHandleReconnect, 'RA.2020.06.26: Handling SQL reconnect'),DESCRIPTION('RYB | Handling SQL reconnect. Version: ' & %tplVersionSQLRECONNECT & ', Release: ' & %tplReleaseSQLRECONNECT),APPLICATION
#!-----------------------------------------------------------------------------
#INSERT(%PreambleRYB)
#!-----------------------------------------------------------------------------------------------------
#! 
#! RA.2020.06.26.FRI: Will need to look at this as to the usage. Create KeepAlive routine.
#!
#PREPARE
#ENDPREPARE
#!-----------------------------------------------------------------------------------------------------
#DISPLAY('')
#SHEET,HSCROLL,AT(,,464)
#INSERT(%MITLicenseSQLRECONNECT)
#INSERT(%ExplainSQLRECONNECT)
  #TAB(UPPER(%Application) & '.' & UPPER(%ProgramExtension))
    #DISPLAY(''),AT(,,,1)
    #INSERT(%OptionsSQLReconnect)
    #DISPLAY(''),AT(,,,1)
    #DISPLAY(%ExplainTextSQLRECONNECT),AT(,,436,54)
  #ENDTAB
#ENDSHEET
#!-----------------------------------------------------------------------------------------------------
#! RA.2020.06.26.FRI: Template made part of the RYB collection. 
#!                    Credit given to the posible author [???]
#! #TEMPLATE(gFileManagerExtTpl,'FileManager extension'),FAMILY('ABC')
#! - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#! DB reconnection.
#! - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#! #EXTENSION(gxDBReconnetion, 'DB reconnection'),APPLICATION
#! #BOXED('About')
#!   #DISPLAY('Inserts the code into every ODBC FM.FunctionDone')
#!   #DISPLAY('to restore db connection on File System Error.')
#!   #DISPLAY
#!   #DISPLAY('Trace prototype: Trace(STRING msg)')
#!   #PROMPT('Trace name:', @s64), %fmTracer
#!   #DISPLAY()
#!   #DISPLAY('KeepAlive prototype: KeepAlive(FileManager),BOOL')
#!   #PROMPT('KeepAlive name:', @s64), %fmKeepAlive
#!   #PROMPT('Category of Form procedures:', @s64), %fmFromCategory,DEFAULT('FORM')
#! #ENDBOXED
#!-------------------------------------------------------------------------
#AT(%FileManagerCodeSection,,'FunctionDone','(SIGNED opCode,*Params Parameters,*CSTRING ErrCode,*CSTRING ErrMsg),BYTE'), WHERE(%FileDriver='ODBC'), PRIORITY(5001), DESCRIPTION('-- gxDBReconnetion.FunctionDone --')
#EMBED(%RYB_FunctionDone_Begin,'RYB: BEGIN: FunctionDone')
PUSHERRORS()
CASE ERRORCODE()
OF FileSystemErr
  #IF(%fmTracer)
  %fmTracer(SELF.GetName() &'::FunctionDone('& opCode &') FILEERROR '& FILEERROR() &' ['& FILEERRORCODE() &']')
  #ENDIF
  
  IF opCode <> DriverOp:OPEN  ! protect against recursion
    !-- close
    LOOP WHILE SELF.Opened
      SELF.Close()
    END
    !-- reopen
    IF SELF.UseFile() = Level:Benign
      POPERRORS()
      RETURN TRUE
    END
  ELSE  
    #IF(%fmTracer)
    %fmTracer(SELF.GetName() &'::FunctionDone(DriverOp:OPEN) cannot be processed')
    #ENDIF
  END
END
POPERRORS()
#EMBED(%RYB_FunctionDone_Ended,'RYB: ENDED: FunctionDone')
#ENDAT
#!-------------------------------------------------------------------------
#AT(%WindowManagerMethodCodeSection,'TakeCompleted','(),BYTE'), PRIORITY(2800), DESCRIPTION('-- gxDBReconnetion.TakeCompleted --')
  #IF(UPPER(%ProcedureCategory) <> UPPER(%fmFromCategory) OR NOT %fmKeepAlive)
    #REJECT
  #ENDIF
#EMBED(%RYB_KeepAlive_Begin,'RYB: BEGIN: KeepAlive')
  !-- ensure the database is alive before saving the changes.
  IF NOT %fmKeepAlive(SELF.Primary.Me)
    RETURN Level:Notify
  END
#EMBED(%RYB_KeepAlive_Ended,'RYB: ENDED: KeepAlive')
#ENDAT
#!-----------------------------------------------------------------------------------------------------
#!-----------------------------------------------------------------------------------------------------
#!----------------------------------------------------------------------------------------------------- RA.2020.06.26.FRI: Made into group
#GROUP(%OptionsSQLReconnect)
#BOXED('About SQL Reconnect'),AT(,,454),PROP(PROP:FontStyle,700)
  #DISPLAY(''),AT(,,,1)
  #DISPLAY('Inserts the code into every ODBC FM.FunctionDone to restore db connection on File System Error.')
  #!DISPLAY('to restore db connection on File System Error.')
  #DISPLAY
  #DISPLAY('Trace prototype: Trace(STRING msg)')
  #PROMPT ('Trace name:', @s64), %fmTracer
  #DISPLAY()
  #DISPLAY('KeepAlive prototype: KeepAlive(FileManager),BOOL')
  #PROMPT ('KeepAlive name:', @s64), %fmKeepAlive
  #PROMPT ('Category of Form procedures:', @s64), %fmFromCategory, DEFAULT('FORM')
#ENDBOXED
#!-----------------------------------------------------------------------------------------------------
#!-----------------------------------------------------------------------------------------------------
#!-----------------------------------------------------------------------------------------------------
#! 2019.12.01: Mark Riffey pulledoutplum@gmail.com] and Pratik Patel
#GROUP(%CopyrightSQLRECONNECT) 
#BOXED('Version '& %tplVersionSQLRECONNECT & ' [ ' & %tplReleaseSQLRECONNECT  & ' ]' ),AT(,,454),PROP(PROP:FontStyle,700)
  #DISPLAY(''),AT(,,,1)
  #DISPLAY('Handling reconnections from SQL back ends.'                                ),AT(10)
  #DISPLAY('Copyright © ' & YEAR(TODAY()) & ' by Mike Duglas.'                         ),AT(10)
  #DISPLAY('All copyrights reserved world wide.'                                       ),AT(10)
  #DISPLAY('Mike Duglas; E-MAIL: Not known at this time.'                              ),AT(10),PROP(PROP:FontStyle,700)
  #DISPLAY('If you are the developer please contact us at the E-MAIL above for proper development credit of this template.'),AT(10)
#ENDBOXED
#!-----------------------------------------------------------------------------------------------------
#GROUP(%MITLicenseSQLRECONNECT)
#TAB('SQLRECONNECT'),PROP(PROP:FontStyle,700)
  #INSERT(%CopyrightSQLRECONNECT) 
  #INSERT(%MITtextSQLRECONNECT)
  #INSERT(%ClarionFamily)
#ENDTAB
#!-----------------------------------------------------------------------------------------------------
#GROUP(%MITtextSQLRECONNECT)
#INSERT(%MITLicenseText)
#BOXED('MIT License'),AT(,,454),PROP(PROP:FontStyle,700)
  #DISPLAY(''),AT(,,,1)
  #DISPLAY('Copyright © ' & YEAR(TODAY()) & ' by Mike Duglas.'),PROP(PROP:FontStyle,700)
  #DISPLAY(''),AT(,,,1)
  #DISPLAY(%MITLicenseText01),AT(,,436,36)
  #DISPLAY(%MITLicenseText02),AT(,,436,14),PROP(PROP:FontStyle,700)
  #DISPLAY(%MITLicenseText03),AT(,,436,44)
#ENDBOXED
#!-----------------------------------------------------------------------------------------------------
#GROUP(%ExplainSQLRECONNECT)
#PREPARE
  #IF(NOT VAREXISTS(%ExplainTextSQLRECONNECT))
    #DECLARE(%ExplainTextSQLRECONNECT)
  #ENDIF
  #SET(%ExplainTextSQLRECONNECT, '')
  #SET(%ExplainTextSQLRECONNECT, %ExplainTextSQLRECONNECT & '<13,10>')
  #SET(%ExplainTextSQLRECONNECT, %ExplainTextSQLRECONNECT & 'This template traps the File Manager ''FunctionDone'' method and checks for the SQL being disconnected')
  #SET(%ExplainTextSQLRECONNECT, %ExplainTextSQLRECONNECT & ' after each ODBC operation.')
  #!SET(%ExplainTextSQLRECONNECT, %ExplainTextSQLRECONNECT & ' It is a global application template that generates the code')
  #!SET(%ExplainTextSQLRECONNECT, %ExplainTextSQLRECONNECT & ' for each of the files before the call to the parent.')
  #!SET(%ExplainTextSQLRECONNECT, %ExplainTextSQLRECONNECT & '<13,10><13,10>')
  #!SET(%ExplainTextSQLRECONNECT, %ExplainTextSQLRECONNECT & 'This template has been tested with the ABC template chain.')
  #SET(%ExplainTextSQLRECONNECT, %ExplainTextSQLRECONNECT & '')
#ENDPREPARE
#!-----------------------------------------------------------------------------------------------------
#!    TempSQL{Prop:SQL} = 'SELECT count(*) from EC_Data2')
#!    IF FILEERRORCODE() = '08S01'  
#! Communication link failure
#!       CLOSE(EC_Data2)
#!       EC_Data2{Prop:Disconnect}
#!       SHARE(EC_Data2)
#!    END
#!-----------------------------------------------------------------------------------------------------
#!-----------------------------------------------------------------------------------------------------
#!-----------------------------------------------------------------------------------------------------
